name: CI/CD Workflow

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.100
    
    - name: Build
      run: |
        dotnet restore Sources/OpenLibraryWS_Wrapper.sln
        dotnet build Sources/OpenLibraryWS_Wrapper.sln -c Release --no-restore
        dotnet publish Sources/OpenLibraryWrapper/OpenLibraryWrapper.csproj -c Release --no-restore -o $GITHUB_WORKSPACE/build/release

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.100

    - name: Test
      run: |
        dotnet restore Sources/OpenLibraryWS_Wrapper.sln
        dotnet test Sources/OpenLibraryWS_Wrapper.sln --no-restore


  
  sonar:
    name: sonar
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: cd Sources && dotnet restore
    - name: Build
      run: cd Sources && dotnet build --no-restore
    - name: Test
      run: cd Sources && dotnet test --no-build --verbosity normal
    - name: Build and analyze
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-reportgenerator-globaltool
        cd Sources
        dotnet-sonarscanner begin /k:"OpenLibraryWS_Wrapper_GitHub" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url=https://codefirst.iut.uca.fr/sonar/ /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**"
        dotnet build OpenLibraryWS_Wrapper.sln -c Release --no-restore
        dotnet test OpenLibraryWS_Wrapper.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
        reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
        dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
